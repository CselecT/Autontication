{
	"id": "8bcad652d8c6f27804b3834374f73296",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CentralRole.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./Roles.sol\";\n\ncontract CentralRole {\n  using Roles for Roles.Role;\n\n  event CentralAdded(address indexed account);\n  event CentralRemoved(address indexed account);\n\n  Roles.Role private central;\n\n  modifier onlyCentral() {\n    require(isCentral(msg.sender));\n    _;\n  }\n\n  function isCentral(address account) public view returns (bool) {\n    return central.has(account);\n  }\n\n  function addCentral(address account) public onlyCentral {\n    _addCentral(account);\n  }\n\n  function renounceCentral() public {\n    _removeCentral(msg.sender);\n  }\n\n  function _addCentral(address account) internal {\n    if(central.any()==false){\n      central.add(account);\n      emit CentralAdded(account);\n    }\n    \n  }\n\n  function _removeCentral(address account) internal {\n    central.remove(account);\n    emit CentralRemoved(account);\n  }\n}"
			},
			"contracts/Roles.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nlibrary Roles {\n  struct Role {\n    mapping (address => bool) bearer;\n    uint256 roleCount;\n  }\n\n  /**\n   * @dev give an account access to this role\n   */\n  function add(Role storage role, address account) internal {\n    require(account != address(0));\n    require(!has(role, account));\n\n    role.bearer[account] = true;\n    role.roleCount+=1;\n  }\n\n  /**\n   * @dev remove an account's access to this role\n   */\n  function remove(Role storage role, address account) internal {\n    require(account != address(0));\n    require(has(role, account));\n\n    role.bearer[account] = false;\n    role.roleCount-=1;\n\n  }\n\n  /**\n   * @dev check if an account has this role\n   * @return bool\n   */\n  function has(Role storage role, address account)\n    internal\n    view\n    returns (bool)\n  {\n    require(account != address(0));\n    return role.bearer[account];\n  }\n\n  function any(Role storage role)\n    internal\n    view\n    returns (bool)\n  {\n    if(role.roleCount==0){\n        return false;\n    }\n    else return true;\n  }\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/CentralRole.sol": {
				"CentralRole": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "CentralAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "CentralRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addCentral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isCentral",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceCentral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CentralRole.sol\":93:902  contract CentralRole {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CentralRole.sol\":93:902  contract CentralRole {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0e23e141\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x280f6efa\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb343ab46\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CentralRole.sol\":548:619  function renounceCentral() public {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/CentralRole.sol\":352:453  function isCentral(address account) public view returns (bool) {... */\n    tag_4:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CentralRole.sol\":457:544  function addCentral(address account) public onlyCentral {... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_15:\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/CentralRole.sol\":548:619  function renounceCentral() public {... */\n    tag_7:\n        /* \"contracts/CentralRole.sol\":588:614  _removeCentral(msg.sender) */\n      tag_18\n        /* \"contracts/CentralRole.sol\":603:613  msg.sender */\n      caller\n        /* \"contracts/CentralRole.sol\":588:602  _removeCentral */\n      tag_19\n        /* \"contracts/CentralRole.sol\":588:614  _removeCentral(msg.sender) */\n      jump\t// in\n    tag_18:\n        /* \"contracts/CentralRole.sol\":548:619  function renounceCentral() public {... */\n      jump\t// out\n        /* \"contracts/CentralRole.sol\":352:453  function isCentral(address account) public view returns (bool) {... */\n    tag_11:\n        /* \"contracts/CentralRole.sol\":409:413  bool */\n      0x00\n        /* \"contracts/CentralRole.sol\":428:448  central.has(account) */\n      tag_21\n        /* \"contracts/CentralRole.sol\":440:447  account */\n      dup3\n        /* \"contracts/CentralRole.sol\":428:435  central */\n      0x00\n        /* \"contracts/CentralRole.sol\":428:439  central.has */\n      tag_22\n      swap1\n        /* \"contracts/CentralRole.sol\":428:448  central.has(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_21:\n        /* \"contracts/CentralRole.sol\":421:448  return central.has(account) */\n      swap1\n      pop\n        /* \"contracts/CentralRole.sol\":352:453  function isCentral(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CentralRole.sol\":457:544  function addCentral(address account) public onlyCentral {... */\n    tag_16:\n        /* \"contracts/CentralRole.sol\":314:335  isCentral(msg.sender) */\n      tag_24\n        /* \"contracts/CentralRole.sol\":324:334  msg.sender */\n      caller\n        /* \"contracts/CentralRole.sol\":314:323  isCentral */\n      tag_11\n        /* \"contracts/CentralRole.sol\":314:335  isCentral(msg.sender) */\n      jump\t// in\n    tag_24:\n        /* \"contracts/CentralRole.sol\":306:336  require(isCentral(msg.sender)) */\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n        /* \"contracts/CentralRole.sol\":519:539  _addCentral(account) */\n      tag_27\n        /* \"contracts/CentralRole.sol\":531:538  account */\n      dup2\n        /* \"contracts/CentralRole.sol\":519:530  _addCentral */\n      tag_28\n        /* \"contracts/CentralRole.sol\":519:539  _addCentral(account) */\n      jump\t// in\n    tag_27:\n        /* \"contracts/CentralRole.sol\":457:544  function addCentral(address account) public onlyCentral {... */\n      pop\n      jump\t// out\n        /* \"contracts/CentralRole.sol\":782:900  function _removeCentral(address account) internal {... */\n    tag_19:\n        /* \"contracts/CentralRole.sol\":838:861  central.remove(account) */\n      tag_30\n        /* \"contracts/CentralRole.sol\":853:860  account */\n      dup2\n        /* \"contracts/CentralRole.sol\":838:845  central */\n      0x00\n        /* \"contracts/CentralRole.sol\":838:852  central.remove */\n      tag_31\n      swap1\n        /* \"contracts/CentralRole.sol\":838:861  central.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_30:\n        /* \"contracts/CentralRole.sol\":887:894  account */\n      dup1\n        /* \"contracts/CentralRole.sol\":872:895  CentralRemoved(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdc4358df642c960c40aac6131d0b28b29bc9420c5ef3ab89bc29388a5246532b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/CentralRole.sol\":782:900  function _removeCentral(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":756:922  function has(Role storage role, address account)... */\n    tag_22:\n        /* \"contracts/Roles.sol\":840:844  bool */\n      0x00\n        /* \"contracts/Roles.sol\":881:882  0 */\n      dup1\n        /* \"contracts/Roles.sol\":862:883  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":862:869  account */\n      dup3\n        /* \"contracts/Roles.sol\":862:883  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":854:884  require(account != address(0)) */\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n        /* \"contracts/Roles.sol\":897:901  role */\n      dup3\n        /* \"contracts/Roles.sol\":897:908  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":897:917  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":909:916  account */\n      dup4\n        /* \"contracts/Roles.sol\":897:917  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Roles.sol\":890:917  return role.bearer[account] */\n      swap1\n      pop\n        /* \"contracts/Roles.sol\":756:922  function has(Role storage role, address account)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CentralRole.sol\":623:778  function _addCentral(address account) internal {... */\n    tag_28:\n        /* \"contracts/CentralRole.sol\":694:699  false */\n      0x00\n        /* \"contracts/CentralRole.sol\":679:699  central.any()==false */\n      iszero\n      iszero\n        /* \"contracts/CentralRole.sol\":679:692  central.any() */\n      tag_35\n        /* \"contracts/CentralRole.sol\":679:686  central */\n      0x00\n        /* \"contracts/CentralRole.sol\":679:690  central.any */\n      tag_36\n        /* \"contracts/CentralRole.sol\":679:692  central.any() */\n      jump\t// in\n    tag_35:\n        /* \"contracts/CentralRole.sol\":679:699  central.any()==false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/CentralRole.sol\":676:769  if(central.any()==false){... */\n      iszero\n      tag_37\n      jumpi\n        /* \"contracts/CentralRole.sol\":708:728  central.add(account) */\n      tag_38\n        /* \"contracts/CentralRole.sol\":720:727  account */\n      dup2\n        /* \"contracts/CentralRole.sol\":708:715  central */\n      0x00\n        /* \"contracts/CentralRole.sol\":708:719  central.add */\n      tag_39\n      swap1\n        /* \"contracts/CentralRole.sol\":708:728  central.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_38:\n        /* \"contracts/CentralRole.sol\":754:761  account */\n      dup1\n        /* \"contracts/CentralRole.sol\":741:762  CentralAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x86cd986707fc630f5d12983d5e40b321df1017d8ed31453b5fc24b2aa558719f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/CentralRole.sol\":676:769  if(central.any()==false){... */\n    tag_37:\n        /* \"contracts/CentralRole.sol\":623:778  function _addCentral(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":484:678  function remove(Role storage role, address account) internal {... */\n    tag_31:\n        /* \"contracts/Roles.sol\":578:579  0 */\n      0x00\n        /* \"contracts/Roles.sol\":559:580  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":559:566  account */\n      dup2\n        /* \"contracts/Roles.sol\":559:580  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":551:581  require(account != address(0)) */\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n        /* \"contracts/Roles.sol\":595:613  has(role, account) */\n      tag_42\n        /* \"contracts/Roles.sol\":599:603  role */\n      dup3\n        /* \"contracts/Roles.sol\":605:612  account */\n      dup3\n        /* \"contracts/Roles.sol\":595:598  has */\n      tag_22\n        /* \"contracts/Roles.sol\":595:613  has(role, account) */\n      jump\t// in\n    tag_42:\n        /* \"contracts/Roles.sol\":587:614  require(has(role, account)) */\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n        /* \"contracts/Roles.sol\":644:649  false */\n      0x00\n        /* \"contracts/Roles.sol\":621:625  role */\n      dup3\n        /* \"contracts/Roles.sol\":621:632  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":621:641  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":633:640  account */\n      dup4\n        /* \"contracts/Roles.sol\":621:641  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Roles.sol\":621:649  role.bearer[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Roles.sol\":671:672  1 */\n      0x01\n        /* \"contracts/Roles.sol\":655:659  role */\n      dup3\n        /* \"contracts/Roles.sol\":655:669  role.roleCount */\n      0x01\n      add\n      0x00\n        /* \"contracts/Roles.sol\":655:672  role.roleCount-=1 */\n      dup3\n      dup3\n      sload\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Roles.sol\":484:678  function remove(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":926:1083  function any(Role storage role)... */\n    tag_36:\n        /* \"contracts/Roles.sol\":993:997  bool */\n      0x00\n        /* \"contracts/Roles.sol\":1026:1027  0 */\n      dup1\n        /* \"contracts/Roles.sol\":1010:1014  role */\n      dup3\n        /* \"contracts/Roles.sol\":1010:1024  role.roleCount */\n      0x01\n      add\n      sload\n        /* \"contracts/Roles.sol\":1010:1027  role.roleCount==0 */\n      eq\n        /* \"contracts/Roles.sol\":1007:1078  if(role.roleCount==0){... */\n      iszero\n      tag_47\n      jumpi\n        /* \"contracts/Roles.sol\":1045:1050  false */\n      0x00\n        /* \"contracts/Roles.sol\":1038:1050  return false */\n      swap1\n      pop\n      jump(tag_46)\n        /* \"contracts/Roles.sol\":1007:1078  if(role.roleCount==0){... */\n    tag_47:\n        /* \"contracts/Roles.sol\":1074:1078  true */\n      0x01\n        /* \"contracts/Roles.sol\":1067:1078  return true */\n      swap1\n      pop\n        /* \"contracts/Roles.sol\":926:1083  function any(Role storage role)... */\n    tag_46:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Roles.sol\":228:418  function add(Role storage role, address account) internal {... */\n    tag_39:\n        /* \"contracts/Roles.sol\":319:320  0 */\n      0x00\n        /* \"contracts/Roles.sol\":300:321  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Roles.sol\":300:307  account */\n      dup2\n        /* \"contracts/Roles.sol\":300:321  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Roles.sol\":292:322  require(account != address(0)) */\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n        /* \"contracts/Roles.sol\":337:355  has(role, account) */\n      tag_51\n        /* \"contracts/Roles.sol\":341:345  role */\n      dup3\n        /* \"contracts/Roles.sol\":347:354  account */\n      dup3\n        /* \"contracts/Roles.sol\":337:340  has */\n      tag_22\n        /* \"contracts/Roles.sol\":337:355  has(role, account) */\n      jump\t// in\n    tag_51:\n        /* \"contracts/Roles.sol\":336:355  !has(role, account) */\n      iszero\n        /* \"contracts/Roles.sol\":328:356  require(!has(role, account)) */\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n        /* \"contracts/Roles.sol\":386:390  true */\n      0x01\n        /* \"contracts/Roles.sol\":363:367  role */\n      dup3\n        /* \"contracts/Roles.sol\":363:374  role.bearer */\n      0x00\n      add\n        /* \"contracts/Roles.sol\":363:383  role.bearer[account] */\n      0x00\n        /* \"contracts/Roles.sol\":375:382  account */\n      dup4\n        /* \"contracts/Roles.sol\":363:383  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Roles.sol\":363:390  role.bearer[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Roles.sol\":412:413  1 */\n      0x01\n        /* \"contracts/Roles.sol\":396:400  role */\n      dup3\n        /* \"contracts/Roles.sol\":396:410  role.roleCount */\n      0x01\n      add\n      0x00\n        /* \"contracts/Roles.sol\":396:413  role.roleCount+=1 */\n      dup3\n      dup3\n      sload\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Roles.sol\":228:418  function add(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_56:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_58\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_10:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":228:347   */\n    tag_61:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_64\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_56\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:596   */\n    tag_65:\n        /* \"#utility.yul\":568:589   */\n      tag_67\n        /* \"#utility.yul\":583:588   */\n      dup2\n        /* \"#utility.yul\":568:589   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":563:566   */\n      dup3\n        /* \"#utility.yul\":556:590   */\n      mstore\n        /* \"#utility.yul\":487:596   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":602:812   */\n    tag_13:\n        /* \"#utility.yul\":689:693   */\n      0x00\n        /* \"#utility.yul\":727:729   */\n      0x20\n        /* \"#utility.yul\":716:725   */\n      dup3\n        /* \"#utility.yul\":712:730   */\n      add\n        /* \"#utility.yul\":704:730   */\n      swap1\n      pop\n        /* \"#utility.yul\":740:805   */\n      tag_70\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":791:800   */\n      dup4\n        /* \"#utility.yul\":787:804   */\n      add\n        /* \"#utility.yul\":778:784   */\n      dup5\n        /* \"#utility.yul\":740:805   */\n      tag_65\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":602:812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":899:1204   */\n    tag_54:\n        /* \"#utility.yul\":939:942   */\n      0x00\n        /* \"#utility.yul\":958:978   */\n      tag_74\n        /* \"#utility.yul\":976:977   */\n      dup3\n        /* \"#utility.yul\":958:978   */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":953:978   */\n      swap2\n      pop\n        /* \"#utility.yul\":992:1012   */\n      tag_76\n        /* \"#utility.yul\":1010:1011   */\n      dup4\n        /* \"#utility.yul\":992:1012   */\n      tag_75\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":987:1012   */\n      swap3\n      pop\n        /* \"#utility.yul\":1146:1147   */\n      dup3\n        /* \"#utility.yul\":1078:1144   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1074:1148   */\n      sub\n        /* \"#utility.yul\":1071:1072   */\n      dup3\n        /* \"#utility.yul\":1068:1149   */\n      gt\n        /* \"#utility.yul\":1065:1172   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":1152:1170   */\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1065:1172   */\n    tag_77:\n        /* \"#utility.yul\":1196:1197   */\n      dup3\n        /* \"#utility.yul\":1193:1194   */\n      dup3\n        /* \"#utility.yul\":1189:1198   */\n      add\n        /* \"#utility.yul\":1182:1198   */\n      swap1\n      pop\n        /* \"#utility.yul\":899:1204   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1210:1401   */\n    tag_45:\n        /* \"#utility.yul\":1250:1254   */\n      0x00\n        /* \"#utility.yul\":1270:1290   */\n      tag_81\n        /* \"#utility.yul\":1288:1289   */\n      dup3\n        /* \"#utility.yul\":1270:1290   */\n      tag_75\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1265:1290   */\n      swap2\n      pop\n        /* \"#utility.yul\":1304:1324   */\n      tag_82\n        /* \"#utility.yul\":1322:1323   */\n      dup4\n        /* \"#utility.yul\":1304:1324   */\n      tag_75\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1299:1324   */\n      swap3\n      pop\n        /* \"#utility.yul\":1343:1344   */\n      dup3\n        /* \"#utility.yul\":1340:1341   */\n      dup3\n        /* \"#utility.yul\":1337:1345   */\n      lt\n        /* \"#utility.yul\":1334:1368   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":1348:1366   */\n      tag_84\n      tag_79\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1334:1368   */\n    tag_83:\n        /* \"#utility.yul\":1393:1394   */\n      dup3\n        /* \"#utility.yul\":1390:1391   */\n      dup3\n        /* \"#utility.yul\":1386:1395   */\n      sub\n        /* \"#utility.yul\":1378:1395   */\n      swap1\n      pop\n        /* \"#utility.yul\":1210:1401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1407:1503   */\n    tag_85:\n        /* \"#utility.yul\":1444:1451   */\n      0x00\n        /* \"#utility.yul\":1473:1497   */\n      tag_87\n        /* \"#utility.yul\":1491:1496   */\n      dup3\n        /* \"#utility.yul\":1473:1497   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1462:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1407:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1599   */\n    tag_68:\n        /* \"#utility.yul\":1543:1550   */\n      0x00\n        /* \"#utility.yul\":1586:1591   */\n      dup2\n        /* \"#utility.yul\":1579:1592   */\n      iszero\n        /* \"#utility.yul\":1572:1593   */\n      iszero\n        /* \"#utility.yul\":1561:1593   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1605:1731   */\n    tag_88:\n        /* \"#utility.yul\":1642:1649   */\n      0x00\n        /* \"#utility.yul\":1682:1724   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1675:1680   */\n      dup3\n        /* \"#utility.yul\":1671:1725   */\n      and\n        /* \"#utility.yul\":1660:1725   */\n      swap1\n      pop\n        /* \"#utility.yul\":1605:1731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1737:1814   */\n    tag_75:\n        /* \"#utility.yul\":1774:1781   */\n      0x00\n        /* \"#utility.yul\":1803:1808   */\n      dup2\n        /* \"#utility.yul\":1792:1808   */\n      swap1\n      pop\n        /* \"#utility.yul\":1737:1814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1820:2000   */\n    tag_79:\n        /* \"#utility.yul\":1868:1945   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1865:1866   */\n      0x00\n        /* \"#utility.yul\":1858:1946   */\n      mstore\n        /* \"#utility.yul\":1965:1969   */\n      0x11\n        /* \"#utility.yul\":1962:1963   */\n      0x04\n        /* \"#utility.yul\":1955:1970   */\n      mstore\n        /* \"#utility.yul\":1989:1993   */\n      0x24\n        /* \"#utility.yul\":1986:1987   */\n      0x00\n        /* \"#utility.yul\":1979:1994   */\n      revert\n        /* \"#utility.yul\":2129:2246   */\n    tag_63:\n        /* \"#utility.yul\":2238:2239   */\n      0x00\n        /* \"#utility.yul\":2235:2236   */\n      dup1\n        /* \"#utility.yul\":2228:2240   */\n      revert\n        /* \"#utility.yul\":2252:2374   */\n    tag_59:\n        /* \"#utility.yul\":2325:2349   */\n      tag_97\n        /* \"#utility.yul\":2343:2348   */\n      dup2\n        /* \"#utility.yul\":2325:2349   */\n      tag_85\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2318:2323   */\n      dup2\n        /* \"#utility.yul\":2315:2350   */\n      eq\n        /* \"#utility.yul\":2305:2368   */\n      tag_98\n      jumpi\n        /* \"#utility.yul\":2364:2365   */\n      0x00\n        /* \"#utility.yul\":2361:2362   */\n      dup1\n        /* \"#utility.yul\":2354:2366   */\n      revert\n        /* \"#utility.yul\":2305:2368   */\n    tag_98:\n        /* \"#utility.yul\":2252:2374   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122047779dc562591d3e100434814592475bca6024b4c3710af49a660feefb41447564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506105ae806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630e23e14114610046578063280f6efa14610050578063b343ab4614610080575b600080fd5b61004e61009c565b005b61006a60048036038101906100659190610404565b6100a7565b6040516100779190610440565b60405180910390f35b61009a60048036038101906100959190610404565b6100c4565b005b6100a5336100e2565b565b60006100bd82600061013c90919063ffffffff16565b9050919050565b6100cd336100a7565b6100d657600080fd5b6100df816101ce565b50565b6100f681600061023f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fdc4358df642c960c40aac6131d0b28b29bc9420c5ef3ab89bc29388a5246532b60405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561017757600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600015156101dc6000610306565b1515141561023c576101f881600061032790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f86cd986707fc630f5d12983d5e40b321df1017d8ed31453b5fc24b2aa558719f60405160405180910390a25b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561027957600080fd5b610283828261013c565b61028c57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060018260010160008282546102fb91906104b1565b925050819055505050565b6000808260010154141561031d5760009050610322565b600190505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561036157600080fd5b61036b828261013c565b1561037557600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060018260010160008282546103e4919061045b565b925050819055505050565b6000813590506103fe81610561565b92915050565b60006020828403121561041a5761041961055c565b5b6000610428848285016103ef565b91505092915050565b61043a816104f7565b82525050565b60006020820190506104556000830184610431565b92915050565b600061046682610523565b915061047183610523565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104a6576104a561052d565b5b828201905092915050565b60006104bc82610523565b91506104c783610523565b9250828210156104da576104d961052d565b5b828203905092915050565b60006104f082610503565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b61056a816104e5565b811461057557600080fd5b5056fea264697066735822122047779dc562591d3e100434814592475bca6024b4c3710af49a660feefb41447564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AE DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE23E141 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x280F6EFA EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xB343AB46 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x404 JUMP JUMPDEST PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x404 JUMP JUMPDEST PUSH2 0xC4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA5 CALLER PUSH2 0xE2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD DUP3 PUSH1 0x0 PUSH2 0x13C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD CALLER PUSH2 0xA7 JUMP JUMPDEST PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF DUP2 PUSH2 0x1CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF6 DUP2 PUSH1 0x0 PUSH2 0x23F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDC4358DF642C960C40AAC6131D0B28B29BC9420C5EF3AB89BC29388A5246532B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH2 0x1DC PUSH1 0x0 PUSH2 0x306 JUMP JUMPDEST ISZERO ISZERO EQ ISZERO PUSH2 0x23C JUMPI PUSH2 0x1F8 DUP2 PUSH1 0x0 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x86CD986707FC630F5D12983D5E40B321DF1017D8ED31453B5FC24B2AA558719F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x283 DUP3 DUP3 PUSH2 0x13C JUMP JUMPDEST PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x322 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36B DUP3 DUP3 PUSH2 0x13C JUMP JUMPDEST ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x45B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3FE DUP2 PUSH2 0x561 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41A JUMPI PUSH2 0x419 PUSH2 0x55C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x428 DUP5 DUP3 DUP6 ADD PUSH2 0x3EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x43A DUP2 PUSH2 0x4F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x455 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x431 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x466 DUP3 PUSH2 0x523 JUMP JUMPDEST SWAP2 POP PUSH2 0x471 DUP4 PUSH2 0x523 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4A6 JUMPI PUSH2 0x4A5 PUSH2 0x52D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BC DUP3 PUSH2 0x523 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C7 DUP4 PUSH2 0x523 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4DA JUMPI PUSH2 0x4D9 PUSH2 0x52D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F0 DUP3 PUSH2 0x503 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56A DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE PUSH24 0x9DC562591D3E100434814592475BCA6024B4C3710AF49A66 0xF 0xEE 0xFB COINBASE DIFFICULTY PUSH22 0x64736F6C634300080700330000000000000000000000 ",
							"sourceMap": "93:809:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addCentral_85": {
									"entryPoint": 462,
									"id": 85,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeCentral_101": {
									"entryPoint": 226,
									"id": 101,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addCentral_53": {
									"entryPoint": 196,
									"id": 53,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_152": {
									"entryPoint": 807,
									"id": 152,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@any_237": {
									"entryPoint": 774,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@has_218": {
									"entryPoint": 316,
									"id": 218,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isCentral_41": {
									"entryPoint": 167,
									"id": 41,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@remove_192": {
									"entryPoint": 575,
									"id": 192,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceCentral_62": {
									"entryPoint": 156,
									"id": 62,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1372,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2377:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "563:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "583:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "568:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "568:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "534:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "541:3:2",
														"type": ""
													}
												],
												"src": "487:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "694:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "704:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "716:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "727:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "712:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "704:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "778:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "791:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "802:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "787:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "787:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "740:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "740:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "740:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "666:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "678:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "689:4:2",
														"type": ""
													}
												],
												"src": "602:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "858:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "868:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "884:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "851:6:2",
														"type": ""
													}
												],
												"src": "818:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "943:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "953:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "976:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "958:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "953:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "987:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1010:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "992:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "987:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1150:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1152:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1152:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1152:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1071:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1078:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1146:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1074:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1074:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1068:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:81:2"
															},
															"nodeType": "YulIf",
															"src": "1065:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1182:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1193:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1196:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1189:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1182:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "930:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "933:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "939:3:2",
														"type": ""
													}
												],
												"src": "899:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1255:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1265:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1288:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1270:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1270:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1265:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1322:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1304:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1299:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1346:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1348:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1348:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1348:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1340:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1343:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1337:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:8:2"
															},
															"nodeType": "YulIf",
															"src": "1334:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1378:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1390:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1393:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1386:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1378:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1241:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1244:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1250:4:2",
														"type": ""
													}
												],
												"src": "1210:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1452:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1462:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1491:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1473:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1473:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1462:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1434:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1444:7:2",
														"type": ""
													}
												],
												"src": "1407:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1551:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1561:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1586:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1579:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1579:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1572:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1572:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1561:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1533:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1543:7:2",
														"type": ""
													}
												],
												"src": "1509:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1650:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1660:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1675:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1671:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1660:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1632:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1642:7:2",
														"type": ""
													}
												],
												"src": "1605:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1782:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1792:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1803:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1792:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1764:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1774:7:2",
														"type": ""
													}
												],
												"src": "1737:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1848:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1865:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1868:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1858:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1858:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1858:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1962:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1965:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1955:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1986:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1989:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1979:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1979:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1979:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1820:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2095:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2112:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2105:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2105:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2105:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2006:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2218:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2235:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2238:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2228:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2228:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2228:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2129:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2295:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2352:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2361:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2364:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2354:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2354:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2354:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2318:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2343:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2325:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2325:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2315:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2315:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2308:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:43:2"
															},
															"nodeType": "YulIf",
															"src": "2305:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2288:5:2",
														"type": ""
													}
												],
												"src": "2252:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630e23e14114610046578063280f6efa14610050578063b343ab4614610080575b600080fd5b61004e61009c565b005b61006a60048036038101906100659190610404565b6100a7565b6040516100779190610440565b60405180910390f35b61009a60048036038101906100959190610404565b6100c4565b005b6100a5336100e2565b565b60006100bd82600061013c90919063ffffffff16565b9050919050565b6100cd336100a7565b6100d657600080fd5b6100df816101ce565b50565b6100f681600061023f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fdc4358df642c960c40aac6131d0b28b29bc9420c5ef3ab89bc29388a5246532b60405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561017757600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600015156101dc6000610306565b1515141561023c576101f881600061032790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f86cd986707fc630f5d12983d5e40b321df1017d8ed31453b5fc24b2aa558719f60405160405180910390a25b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561027957600080fd5b610283828261013c565b61028c57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060018260010160008282546102fb91906104b1565b925050819055505050565b6000808260010154141561031d5760009050610322565b600190505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561036157600080fd5b61036b828261013c565b1561037557600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060018260010160008282546103e4919061045b565b925050819055505050565b6000813590506103fe81610561565b92915050565b60006020828403121561041a5761041961055c565b5b6000610428848285016103ef565b91505092915050565b61043a816104f7565b82525050565b60006020820190506104556000830184610431565b92915050565b600061046682610523565b915061047183610523565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104a6576104a561052d565b5b828201905092915050565b60006104bc82610523565b91506104c783610523565b9250828210156104da576104d961052d565b5b828203905092915050565b60006104f082610503565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b61056a816104e5565b811461057557600080fd5b5056fea264697066735822122047779dc562591d3e100434814592475bca6024b4c3710af49a660feefb41447564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE23E141 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x280F6EFA EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xB343AB46 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x404 JUMP JUMPDEST PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x404 JUMP JUMPDEST PUSH2 0xC4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA5 CALLER PUSH2 0xE2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD DUP3 PUSH1 0x0 PUSH2 0x13C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD CALLER PUSH2 0xA7 JUMP JUMPDEST PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF DUP2 PUSH2 0x1CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF6 DUP2 PUSH1 0x0 PUSH2 0x23F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDC4358DF642C960C40AAC6131D0B28B29BC9420C5EF3AB89BC29388A5246532B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH2 0x1DC PUSH1 0x0 PUSH2 0x306 JUMP JUMPDEST ISZERO ISZERO EQ ISZERO PUSH2 0x23C JUMPI PUSH2 0x1F8 DUP2 PUSH1 0x0 PUSH2 0x327 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x86CD986707FC630F5D12983D5E40B321DF1017D8ED31453B5FC24B2AA558719F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x283 DUP3 DUP3 PUSH2 0x13C JUMP JUMPDEST PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x322 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36B DUP3 DUP3 PUSH2 0x13C JUMP JUMPDEST ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x45B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3FE DUP2 PUSH2 0x561 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41A JUMPI PUSH2 0x419 PUSH2 0x55C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x428 DUP5 DUP3 DUP6 ADD PUSH2 0x3EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x43A DUP2 PUSH2 0x4F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x455 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x431 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x466 DUP3 PUSH2 0x523 JUMP JUMPDEST SWAP2 POP PUSH2 0x471 DUP4 PUSH2 0x523 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4A6 JUMPI PUSH2 0x4A5 PUSH2 0x52D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BC DUP3 PUSH2 0x523 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C7 DUP4 PUSH2 0x523 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4DA JUMPI PUSH2 0x4D9 PUSH2 0x52D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F0 DUP3 PUSH2 0x503 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56A DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE PUSH24 0x9DC562591D3E100434814592475BCA6024B4C3710AF49A66 0xF 0xEE 0xFB COINBASE DIFFICULTY PUSH22 0x64736F6C634300080700330000000000000000000000 ",
							"sourceMap": "93:809:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;548:71;;;:::i;:::-;;352:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;457:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;548:71;588:26;603:10;588:14;:26::i;:::-;548:71::o;352:101::-;409:4;428:20;440:7;428;:11;;:20;;;;:::i;:::-;421:27;;352:101;;;:::o;457:87::-;314:21;324:10;314:9;:21::i;:::-;306:30;;;;;;519:20:::1;531:7;519:11;:20::i;:::-;457:87:::0;:::o;782:118::-;838:23;853:7;838;:14;;:23;;;;:::i;:::-;887:7;872:23;;;;;;;;;;;;782:118;:::o;756:166:1:-;840:4;881:1;862:21;;:7;:21;;;;854:30;;;;;;897:4;:11;;:20;909:7;897:20;;;;;;;;;;;;;;;;;;;;;;;;;890:27;;756:166;;;;:::o;623:155:0:-;694:5;679:20;;:13;:7;:11;:13::i;:::-;:20;;;676:93;;;708:20;720:7;708;:11;;:20;;;;:::i;:::-;754:7;741:21;;;;;;;;;;;;676:93;623:155;:::o;484:194:1:-;578:1;559:21;;:7;:21;;;;551:30;;;;;;595:18;599:4;605:7;595:3;:18::i;:::-;587:27;;;;;;644:5;621:4;:11;;:20;633:7;621:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;671:1;655:4;:14;;;:17;;;;;;;:::i;:::-;;;;;;;;484:194;;:::o;926:157::-;993:4;1026:1;1010:4;:14;;;:17;1007:71;;;1045:5;1038:12;;;;1007:71;1074:4;1067:11;;926:157;;;;:::o;228:190::-;319:1;300:21;;:7;:21;;;;292:30;;;;;;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:28;;;;;;386:4;363;:11;;:20;375:7;363:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;412:1;396:4;:14;;;:17;;;;;;;:::i;:::-;;;;;;;;228:190;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:109::-;568:21;583:5;568:21;:::i;:::-;563:3;556:34;487:109;;:::o;602:210::-;689:4;727:2;716:9;712:18;704:26;;740:65;802:1;791:9;787:17;778:6;740:65;:::i;:::-;602:210;;;;:::o;899:305::-;939:3;958:20;976:1;958:20;:::i;:::-;953:25;;992:20;1010:1;992:20;:::i;:::-;987:25;;1146:1;1078:66;1074:74;1071:1;1068:81;1065:107;;;1152:18;;:::i;:::-;1065:107;1196:1;1193;1189:9;1182:16;;899:305;;;;:::o;1210:191::-;1250:4;1270:20;1288:1;1270:20;:::i;:::-;1265:25;;1304:20;1322:1;1304:20;:::i;:::-;1299:25;;1343:1;1340;1337:8;1334:34;;;1348:18;;:::i;:::-;1334:34;1393:1;1390;1386:9;1378:17;;1210:191;;;;:::o;1407:96::-;1444:7;1473:24;1491:5;1473:24;:::i;:::-;1462:35;;1407:96;;;:::o;1509:90::-;1543:7;1586:5;1579:13;1572:21;1561:32;;1509:90;;;:::o;1605:126::-;1642:7;1682:42;1675:5;1671:54;1660:65;;1605:126;;;:::o;1737:77::-;1774:7;1803:5;1792:16;;1737:77;;;:::o;1820:180::-;1868:77;1865:1;1858:88;1965:4;1962:1;1955:15;1989:4;1986:1;1979:15;2129:117;2238:1;2235;2228:12;2252:122;2325:24;2343:5;2325:24;:::i;:::-;2318:5;2315:35;2305:63;;2364:1;2361;2354:12;2305:63;2252:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "290800",
								"executionCost": "331",
								"totalCost": "291131"
							},
							"external": {
								"addCentral(address)": "infinite",
								"isCentral(address)": "infinite",
								"renounceCentral()": "infinite"
							},
							"internal": {
								"_addCentral(address)": "infinite",
								"_removeCentral(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 902,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 93,
									"end": 902,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 93,
									"end": 902,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 93,
									"end": 902,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 93,
									"end": 902,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 93,
									"end": 902,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 93,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 902,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 93,
									"end": 902,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 902,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 93,
									"end": 902,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 93,
									"end": 902,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 93,
									"end": 902,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 93,
									"end": 902,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 93,
									"end": 902,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 902,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 93,
									"end": 902,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 902,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 902,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 93,
									"end": 902,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 902,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047779dc562591d3e100434814592475bca6024b4c3710af49a660feefb41447564736f6c63430008070033",
									".code": [
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "E23E141"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "280F6EFA"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "B343AB46"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 902,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 548,
											"end": 619,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 548,
											"end": 619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 548,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 548,
											"end": 619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 548,
											"end": 619,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 548,
											"end": 619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 619,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 457,
											"end": 544,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 457,
											"end": 544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 457,
											"end": 544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 457,
											"end": 544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 544,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 457,
											"end": 544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 457,
											"end": 544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 457,
											"end": 544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 457,
											"end": 544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 457,
											"end": 544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 457,
											"end": 544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 457,
											"end": 544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 457,
											"end": 544,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 457,
											"end": 544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 457,
											"end": 544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 457,
											"end": 544,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 457,
											"end": 544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 544,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 619,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 548,
											"end": 619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 603,
											"end": 613,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 588,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 588,
											"end": 614,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 588,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 619,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 352,
											"end": 453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 409,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 440,
											"end": 447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 428,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 428,
											"end": 439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 428,
											"end": 448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 428,
											"end": 448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 428,
											"end": 448,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 428,
											"end": 448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 428,
											"end": 448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 448,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 428,
											"end": 448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 352,
											"end": 453,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 457,
											"end": 544,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 457,
											"end": 544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 314,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 324,
											"end": 334,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 314,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 314,
											"end": 335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 314,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 314,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 306,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 306,
											"end": 336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 306,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 306,
											"end": 336,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 306,
											"end": 336,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 306,
											"end": 336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 519,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 531,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 519,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 457,
											"end": 544,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 782,
											"end": 900,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 782,
											"end": 900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 838,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 838,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 838,
											"end": 852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 838,
											"end": 861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 838,
											"end": 861,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 838,
											"end": 861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 838,
											"end": 861,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 838,
											"end": 861,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 838,
											"end": 861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 887,
											"end": 894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 872,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 872,
											"end": 895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 872,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "DC4358DF642C960C40AAC6131D0B28B29BC9420C5EF3AB89BC29388A5246532B"
										},
										{
											"begin": 872,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 872,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 872,
											"end": 895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 872,
											"end": 895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 872,
											"end": 895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 872,
											"end": 895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 872,
											"end": 895,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 782,
											"end": 900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 782,
											"end": 900,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 756,
											"end": 922,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 756,
											"end": 922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 840,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 883,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 883,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 862,
											"end": 869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 862,
											"end": 883,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 883,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 862,
											"end": 883,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 862,
											"end": 883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 854,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 854,
											"end": 884,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 854,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 884,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 854,
											"end": 884,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 854,
											"end": 884,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 854,
											"end": 884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 897,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 916,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 917,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 917,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 917,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 897,
											"end": 917,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 897,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 897,
											"end": 917,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 890,
											"end": 917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 756,
											"end": 922,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 756,
											"end": 922,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 756,
											"end": 922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 756,
											"end": 922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 756,
											"end": 922,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 623,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 623,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 694,
											"end": 699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 679,
											"end": 699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 679,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 679,
											"end": 686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 679,
											"end": 692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 692,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 679,
											"end": 692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 679,
											"end": 699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 679,
											"end": 699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 676,
											"end": 769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 676,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 676,
											"end": 769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 720,
											"end": 727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 708,
											"end": 719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 708,
											"end": 728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 708,
											"end": 728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 741,
											"end": 762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "86CD986707FC630F5D12983D5E40B321DF1017D8ED31453B5FC24B2AA558719F"
										},
										{
											"begin": 741,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 741,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 741,
											"end": 762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 741,
											"end": 762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 741,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 762,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 676,
											"end": 769,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 676,
											"end": 769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 623,
											"end": 778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 623,
											"end": 778,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 484,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 484,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 578,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 559,
											"end": 566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 559,
											"end": 580,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 559,
											"end": 580,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 559,
											"end": 580,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 559,
											"end": 580,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 551,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 551,
											"end": 581,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 551,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 581,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 551,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 551,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 599,
											"end": 603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 605,
											"end": 612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 595,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 614,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 587,
											"end": 614,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 644,
											"end": 649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 621,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 621,
											"end": 641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 621,
											"end": 641,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 621,
											"end": 641,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 621,
											"end": 641,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 621,
											"end": 641,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 621,
											"end": 641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 621,
											"end": 641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 621,
											"end": 641,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 621,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 621,
											"end": 641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 621,
											"end": 641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 621,
											"end": 641,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 621,
											"end": 641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 641,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 621,
											"end": 641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 649,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 621,
											"end": 649,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 621,
											"end": 649,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 621,
											"end": 649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 671,
											"end": 672,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 655,
											"end": 659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 655,
											"end": 669,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 655,
											"end": 669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 655,
											"end": 669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 655,
											"end": 672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 655,
											"end": 672,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 655,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 655,
											"end": 672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 655,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 655,
											"end": 672,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 655,
											"end": 672,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 655,
											"end": 672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 655,
											"end": 672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 655,
											"end": 672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 655,
											"end": 672,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 655,
											"end": 672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 484,
											"end": 678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 484,
											"end": 678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 484,
											"end": 678,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 926,
											"end": 1083,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 926,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 993,
											"end": 997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1014,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1024,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1027,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1038,
											"end": 1050,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1007,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1078,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1067,
											"end": 1078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 1083,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 926,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 926,
											"end": 1083,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 1083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 1083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 1083,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 228,
											"end": 418,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 228,
											"end": 418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 319,
											"end": 320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 300,
											"end": 321,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 300,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 300,
											"end": 321,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 300,
											"end": 321,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 300,
											"end": 321,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 292,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 292,
											"end": 322,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 292,
											"end": 322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 292,
											"end": 322,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 292,
											"end": 322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 341,
											"end": 345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 347,
											"end": 354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 337,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 336,
											"end": 355,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 328,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 328,
											"end": 356,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 328,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 356,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 328,
											"end": 356,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 328,
											"end": 356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 363,
											"end": 367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 363,
											"end": 374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 363,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 363,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 363,
											"end": 383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 363,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 363,
											"end": 383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 363,
											"end": 383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 363,
											"end": 383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 363,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 363,
											"end": 383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 363,
											"end": 383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 363,
											"end": 383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 363,
											"end": 383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 363,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 363,
											"end": 383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 363,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 383,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 363,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 363,
											"end": 390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 412,
											"end": 413,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 396,
											"end": 400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 396,
											"end": 410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 396,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 413,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 396,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 396,
											"end": 413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 396,
											"end": 413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 396,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 396,
											"end": 413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 396,
											"end": 413,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 396,
											"end": 413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 396,
											"end": 413,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 396,
											"end": 413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 396,
											"end": 413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 396,
											"end": 413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 396,
											"end": 413,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 396,
											"end": 413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 228,
											"end": 418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 228,
											"end": 418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 228,
											"end": 418,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 568,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 568,
											"end": 589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 563,
											"end": 566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 556,
											"end": 590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 596,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 602,
											"end": 812,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 602,
											"end": 812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 689,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 725,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 704,
											"end": 730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 740,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 800,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 787,
											"end": 804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 778,
											"end": 784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 740,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 740,
											"end": 805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 602,
											"end": 812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 602,
											"end": 812,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 602,
											"end": 812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 602,
											"end": 812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 602,
											"end": 812,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 1204,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 899,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 976,
											"end": 977,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 958,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 958,
											"end": 978,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 958,
											"end": 978,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 958,
											"end": 978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 953,
											"end": 978,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 953,
											"end": 978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1010,
											"end": 1011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 992,
											"end": 1012,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 992,
											"end": 1012,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 992,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1012,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1146,
											"end": 1147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1074,
											"end": 1148,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1149,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1172,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1065,
											"end": 1172,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1172,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1065,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1197,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1182,
											"end": 1198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 1204,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 899,
											"end": 1204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 899,
											"end": 1204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 1204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 1204,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1210,
											"end": 1401,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1210,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1250,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1288,
											"end": 1289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1270,
											"end": 1290,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1270,
											"end": 1290,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1270,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1322,
											"end": 1323,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1299,
											"end": 1324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1344,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1340,
											"end": 1341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1345,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1368,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1334,
											"end": 1368,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1368,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1334,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1401,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1401,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1407,
											"end": 1503,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1407,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1491,
											"end": 1496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1473,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1503,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1503,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1509,
											"end": 1599,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1509,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1593,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1599,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1599,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1605,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1605,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1724,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1675,
											"end": 1680,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1731,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1731,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1731,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 1814,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1737,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1808,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1814,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1814,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1820,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1820,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1945,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1865,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1946,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 1969,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1962,
											"end": 1963,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1955,
											"end": 1970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1986,
											"end": 1987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1994,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2246,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2129,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2240,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2374,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2252,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2343,
											"end": 2348,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2325,
											"end": 2349,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2325,
											"end": 2349,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2325,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2323,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2350,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2305,
											"end": 2368,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2366,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2368,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2305,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2374,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addCentral(address)": "b343ab46",
							"isCentral(address)": "280f6efa",
							"renounceCentral()": "0e23e141"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"CentralAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"CentralRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addCentral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isCentral\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceCentral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CentralRole.sol\":\"CentralRole\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CentralRole.sol\":{\"keccak256\":\"0x5fd8436e78728abf17567d688c1425e095556e521f5b0531248ff451659a2bba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e1c57188834e3ab54027ff992db70e2ec441cdb7c2e4833394f9b935959ecd3f\",\"dweb:/ipfs/QmXTeRj3Ho1ngeVb8LxZ3YdNDGgjTePJZ2w5LinEYrpi8s\"]},\"contracts/Roles.sol\":{\"keccak256\":\"0x81585b20a862eaa4a2ea6f15de016d521b5092864fc6b8cad5eada02c865dfd0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2dd009c3ce0d210f49c391b169c7022ac75b4351ea676e2a285e575f4d35d5c8\",\"dweb:/ipfs/QmUtq1jLJocmeMwetgzXm3cDRtFZQXcJxGtgXXjukB6bXh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 17,
								"contract": "contracts/CentralRole.sol:CentralRole",
								"label": "central",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)111_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Role)111_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 108,
										"contract": "contracts/CentralRole.sol:CentralRole",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 110,
										"contract": "contracts/CentralRole.sol:CentralRole",
										"label": "roleCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Roles.sol": {
				"Roles": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Roles.sol\":70:1086  library Roles {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Roles.sol\":70:1086  library Roles {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122024af92c5597d6397098b42fb34c0f4fc294c068e5abb7ae839aa266e0521fe2a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122024af92c5597d6397098b42fb34c0f4fc294c068e5abb7ae839aa266e0521fe2a64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xAF SWAP3 0xC5 MSIZE PUSH30 0x6397098B42FB34C0F4FC294C068E5ABB7AE839AA266E0521FE2A64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "70:1016:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122024af92c5597d6397098b42fb34c0f4fc294c068e5abb7ae839aa266e0521fe2a64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xAF SWAP3 0xC5 MSIZE PUSH30 0x6397098B42FB34C0F4FC294C068E5ABB7AE839AA266E0521FE2A64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "70:1016:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(struct Roles.Role storage pointer,address)": "infinite",
								"any(struct Roles.Role storage pointer)": "infinite",
								"has(struct Roles.Role storage pointer,address)": "infinite",
								"remove(struct Roles.Role storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 70,
									"end": 1086,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 70,
									"end": 1086,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122024af92c5597d6397098b42fb34c0f4fc294c068e5abb7ae839aa266e0521fe2a64736f6c63430008070033",
									".code": [
										{
											"begin": 70,
											"end": 1086,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 70,
											"end": 1086,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 70,
											"end": 1086,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 70,
											"end": 1086,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 70,
											"end": 1086,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 70,
											"end": 1086,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 70,
											"end": 1086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 1086,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 70,
											"end": 1086,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Roles.sol\":\"Roles\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Roles.sol\":{\"keccak256\":\"0x81585b20a862eaa4a2ea6f15de016d521b5092864fc6b8cad5eada02c865dfd0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2dd009c3ce0d210f49c391b169c7022ac75b4351ea676e2a285e575f4d35d5c8\",\"dweb:/ipfs/QmUtq1jLJocmeMwetgzXm3cDRtFZQXcJxGtgXXjukB6bXh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/CentralRole.sol": {
				"ast": {
					"absolutePath": "contracts/CentralRole.sol",
					"exportedSymbols": {
						"CentralRole": [
							102
						],
						"Roles": [
							238
						]
					},
					"id": 103,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "contracts/Roles.sol",
							"file": "./Roles.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 103,
							"sourceUnit": 239,
							"src": "70:21:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 102,
							"linearizedBaseContracts": [
								102
							],
							"name": "CentralRole",
							"nameLocation": "102:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 6,
									"libraryName": {
										"id": 3,
										"name": "Roles",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 238,
										"src": "124:5:0"
									},
									"nodeType": "UsingForDirective",
									"src": "118:27:0",
									"typeName": {
										"id": 5,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4,
											"name": "Roles.Role",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 111,
											"src": "134:10:0"
										},
										"referencedDeclaration": 111,
										"src": "134:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"anonymous": false,
									"id": 10,
									"name": "CentralAdded",
									"nameLocation": "155:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "184:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "168:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:25:0"
									},
									"src": "149:44:0"
								},
								{
									"anonymous": false,
									"id": 14,
									"name": "CentralRemoved",
									"nameLocation": "202:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "233:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "217:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "217:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "216:25:0"
									},
									"src": "196:46:0"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "central",
									"nameLocation": "265:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "246:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$111_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"id": 16,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 15,
											"name": "Roles.Role",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 111,
											"src": "246:10:0"
										},
										"referencedDeclaration": 111,
										"src": "246:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "300:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 21,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "324:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 22,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "324:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 20,
																"name": "isCentral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "314:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "314:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "306:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "306:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "306:30:0"
											},
											{
												"id": 26,
												"nodeType": "PlaceholderStatement",
												"src": "342:1:0"
											}
										]
									},
									"id": 28,
									"name": "onlyCentral",
									"nameLocation": "286:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "297:2:0"
									},
									"src": "277:71:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "415:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 37,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 35,
															"name": "central",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "428:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$111_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 218,
														"src": "428:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$111_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$111_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "428:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 34,
												"id": 39,
												"nodeType": "Return",
												"src": "421:27:0"
											}
										]
									},
									"functionSelector": "280f6efa",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isCentral",
									"nameLocation": "361:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "379:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "371:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "371:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "370:17:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "409:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 32,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "409:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:6:0"
									},
									"scope": 102,
									"src": "352:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "513:31:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 49,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "531:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 48,
														"name": "_addCentral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "519:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "519:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "519:20:0"
											}
										]
									},
									"functionSelector": "b343ab46",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 46,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 45,
												"name": "onlyCentral",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "501:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "501:11:0"
										}
									],
									"name": "addCentral",
									"nameLocation": "466:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "485:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "477:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:0:0"
									},
									"scope": 102,
									"src": "457:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "582:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 57,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "603:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "603:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 56,
														"name": "_removeCentral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "588:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "588:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "588:26:0"
											}
										]
									},
									"functionSelector": "0e23e141",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceCentral",
									"nameLocation": "557:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "572:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:0:0"
									},
									"scope": 102,
									"src": "548:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "670:108:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 67,
																"name": "central",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$111_storage",
																	"typeString": "struct Roles.Role storage ref"
																}
															},
															"id": 68,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "any",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 237,
															"src": "679:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$111_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_Role_$111_storage_ptr_$",
																"typeString": "function (struct Roles.Role storage pointer) view returns (bool)"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "679:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "694:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "679:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 83,
												"nodeType": "IfStatement",
												"src": "676:93:0",
												"trueBody": {
													"id": 82,
													"nodeType": "Block",
													"src": "700:69:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 75,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "720:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 72,
																		"name": "central",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "708:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$111_storage",
																			"typeString": "struct Roles.Role storage ref"
																		}
																	},
																	"id": 74,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 152,
																	"src": "708:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$111_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$111_storage_ptr_$",
																		"typeString": "function (struct Roles.Role storage pointer,address)"
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "708:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 77,
															"nodeType": "ExpressionStatement",
															"src": "708:20:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 79,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "754:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 78,
																	"name": "CentralAdded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "741:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "741:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 81,
															"nodeType": "EmitStatement",
															"src": "736:26:0"
														}
													]
												}
											}
										]
									},
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addCentral",
									"nameLocation": "632:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "652:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "644:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "643:17:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "670:0:0"
									},
									"scope": 102,
									"src": "623:155:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "832:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 93,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "853:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 90,
															"name": "central",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "838:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$111_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "838:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$111_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$111_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "838:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "838:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 97,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 96,
														"name": "CentralRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "872:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "872:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "EmitStatement",
												"src": "867:28:0"
											}
										]
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeCentral",
									"nameLocation": "791:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "814:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "806:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:17:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "832:0:0"
									},
									"scope": 102,
									"src": "782:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 103,
							"src": "93:809:0",
							"usedErrors": []
						}
					],
					"src": "37:865:0"
				},
				"id": 0
			},
			"contracts/Roles.sol": {
				"ast": {
					"absolutePath": "contracts/Roles.sol",
					"exportedSymbols": {
						"Roles": [
							238
						]
					},
					"id": 239,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 104,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 238,
							"linearizedBaseContracts": [
								238
							],
							"name": "Roles",
							"nameLocation": "78:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Roles.Role",
									"id": 111,
									"members": [
										{
											"constant": false,
											"id": 108,
											"mutability": "mutable",
											"name": "bearer",
											"nameLocation": "132:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "106:32:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 107,
												"keyType": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "106:25:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "roleCount",
											"nameLocation": "152:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "144:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "144:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Role",
									"nameLocation": "95:4:1",
									"nodeType": "StructDefinition",
									"scope": 238,
									"src": "88:78:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "286:132:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 121,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "300:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "319:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "311:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 122,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "311:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "311:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "300:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "292:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "292:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "292:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "336:19:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 131,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "341:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		}
																	},
																	{
																		"id": 132,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "347:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 130,
																	"name": "has",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "337:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$111_storage_ptr_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "337:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "328:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "328:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "328:28:1"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 137,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "363:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 108,
															"src": "363:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 141,
														"indexExpression": {
															"id": 139,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "375:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "363:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "386:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "363:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "363:27:1"
											},
											{
												"expression": {
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 145,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "396:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "roleCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "396:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "412:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "396:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "396:17:1"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "170:55:1",
										"text": " @dev give an account access to this role"
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "237:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "254:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "241:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 114,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 113,
														"name": "Role",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 111,
														"src": "241:4:1"
													},
													"referencedDeclaration": 111,
													"src": "241:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "268:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "260:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:36:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:0:1"
									},
									"scope": 238,
									"src": "228:190:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "545:133:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "559:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "578:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "570:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 163,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "570:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "570:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "559:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "551:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "551:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "551:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 172,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "599:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	}
																},
																{
																	"id": 173,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "605:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 171,
																"name": "has",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "595:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$111_storage_ptr_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "587:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "587:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "587:27:1"
											},
											{
												"expression": {
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 177,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "621:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 108,
															"src": "621:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 181,
														"indexExpression": {
															"id": 179,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "633:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "621:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "644:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "621:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "621:28:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "655:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "roleCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "655:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "671:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "655:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "655:17:1"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "422:59:1",
										"text": " @dev remove an account's access to this role"
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "493:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "513:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "500:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 155,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 154,
														"name": "Role",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 111,
														"src": "500:4:1"
													},
													"referencedDeclaration": 111,
													"src": "500:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "527:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "519:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:36:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "545:0:1"
									},
									"scope": 238,
									"src": "484:194:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "848:74:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 204,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "862:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "881:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "873:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 205,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "873:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "873:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "862:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "854:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "854:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "854:30:1"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "897:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 213,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "bearer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "897:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 215,
													"indexExpression": {
														"id": 214,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "909:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "897:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 202,
												"id": 216,
												"nodeType": "Return",
												"src": "890:27:1"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "682:71:1",
										"text": " @dev check if an account has this role\n @return bool"
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "has",
									"nameLocation": "765:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "782:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "769:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 195,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 194,
														"name": "Role",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 111,
														"src": "769:4:1"
													},
													"referencedDeclaration": 111,
													"src": "769:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "796:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "788:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:36:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "840:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "840:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:6:1"
									},
									"scope": 238,
									"src": "756:166:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1001:82:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 226,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "1010:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 227,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "roleCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "1010:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1026:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1010:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"hexValue": "74727565",
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1074:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"functionReturnParameters": 225,
													"id": 234,
													"nodeType": "Return",
													"src": "1067:11:1"
												},
												"id": 235,
												"nodeType": "IfStatement",
												"src": "1007:71:1",
												"trueBody": {
													"id": 232,
													"nodeType": "Block",
													"src": "1028:29:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1045:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 225,
															"id": 231,
															"nodeType": "Return",
															"src": "1038:12:1"
														}
													]
												}
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "any",
									"nameLocation": "935:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "952:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "939:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 220,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 219,
														"name": "Role",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 111,
														"src": "939:4:1"
													},
													"referencedDeclaration": 111,
													"src": "939:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$111_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:19:1"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "993:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "993:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:6:1"
									},
									"scope": 238,
									"src": "926:157:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 239,
							"src": "70:1016:1",
							"usedErrors": []
						}
					],
					"src": "37:1050:1"
				},
				"id": 1
			}
		}
	}
}